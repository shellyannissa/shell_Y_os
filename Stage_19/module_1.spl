breakpoint;
alias functionNum R1;
alias currentPID R2;

//free userAreaPage
if(functionNum == 2) then  
    alias userAreaPage R3;
    userAreaPage = [PROCESS_TABLE + 16 * currentPID + 11];
    multipush(R1, R2, R3);
    R1 = 2;
    R2 = userAreaPage;
    call MOD_2;
    multipop(R1, R2, R3);
    return ;
endif;

//exit process
if(functionNum == 3) then
    multipush(R1, R2);
    //free page table
    R1 = 4;
    R2 = currentPID;
    call MOD_1;

    //free userAreaPage
    R1 = 2;
    R2 = currentPID;
    call MOD_1;

    multipop(R1, R2);

    [PROCESS_TABLE + (16 * currentPID) + 4] = TERMINATED;
    return ;
endif;

//free page table
if(functionNum == 4) then
    [PTBR + 0] = -1;
    [PTBR + 1] = "0000";
    [PTBR + 2] = -1;
    [PTBR + 3] = "0000";

   alias i R5;
	alias pageNum R4;
	i = 1;

	while(i<(PTLR-1)) do
		pageNum = [PTBR + 2 + 2*i];
		if(pageNum!=-1) then
			multipush(R1, R2, R3, R4);
			R1 = 2;
			R2 = pageNum;
			call MOD_2;
			multipop(R1, R2, R3, R4);
			[PTBR + 2 + 2*i] = -1;
			[PTBR + 2 + 2*i + 1] = "0000";	
		endif;
	i = i + 1;
	endwhile;
	i=2;
	while(i<10) do
	if([DISK_MAP_TABLE + currentPID*10 + i] != -1) then
		if(i<4 || i>7) then
			multipush(R1, R2, R4, R5);
			R1 = 4;
			R3 = currentPID;
			R2 = [DISK_MAP_TABLE + currentPID*10 + i];
			call MOD_2;
			multipop(R1, R2, R4, R5);
		endif;
		[DISK_MAP_TABLE + currentPID*10 + i] = -1;
	endif;
	i = i + 1;
	endwhile;
	return;

endif;

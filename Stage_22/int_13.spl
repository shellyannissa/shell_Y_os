//extracting system call number and switching to kernel stack
alias userSP R1;
userSP = SP;

alias currPID R2;
currPID = [SYSTEM_STATUS_TABLE + 1];

alias procTab R3;
procTab = PROCESS_TABLE + currPID*16;

alias syscall R4;
syscall = [[PTBR + 2*(userSP-5)/512]*512 + (userSP-5)%512];

[procTab + 13] = userSP;
SP = [procTab + 11]*512 -1;
[procTab + 9] = syscall;


//Semget syscall
if(syscall == 17) then
  alias resTab R5;
  resTab = (([procTab + 11]+1)*512)-16;
  alias i R6;
  i=0;
  while([resTab+i] != -1 && i < 16) do
    i = i + 2;
  endwhile;

    //Process resource limit reached return -1
  if(i==16) then
    [[PTBR + 2*(userSP-1)/512]*512 + (userSP-1)%512] = -1;
    SP = [procTab + 13];
    [procTab + 9] = 0;
    ireturn;
  endif;
  resTab = resTab + 2*i;
  [resTab] = 1;

  //invoking the acquire semaphore function 
  multipush(R1, R2, R3, R4, R5, R6);
  R1 = 6;
  R2 = currPID;
  call MOD_0;
  multipop(R1, R2, R3, R4, R5, R6);

  // maximum semaphore limit(32) reached return -2
  if(R0 == -1) then
    [[PTBR + 2*(userSP-1)/512]*512 + (userSP-1)%512] = -2;
    SP = [procTab + 13];
    [procTab + 9] = 0;
    ireturn;
  endif;
  [resTab+1] = R0;
  [[PTBR + 2*(userSP-1)/512]*512 + (userSP-1)%512] = R6;
  SP = [procTab + 13];
  [procTab + 9] = 0;
  ireturn;
endif;


//Semrelease syscall
if(syscall == 18) then
  alias semid R5;
  semid = [[PTBR + 2*(userSP-4)/512]*512 + (userSP-4)%512];
  alias resTab R6;
  resTab = (([procTab + 11]+1)*512)-16;

//invalid semid entry or if semid indicates a file 
  if(semid<0 || semid>7 || [resTab+2*semid] != 1) then
    SP = [procTab + 13];
    [procTab + 9] = 0;
    [[PTBR + 2*(userSP-1)/512]*512 + (userSP-1)%512] = -1;
    ireturn;
  endif;


  //invoking the release semaphore fucntion in the resource manager
  multipush(R1, R2, R3, R4, R5, R6);
  R1 = 7;
  R3 = currPID;
  R2 = [resTab + 2*semid + 1];
  call MOD_0;
  multipop(R1, R2, R3, R4, R5, R6);
  [resTab] = -1;
  [resTab+1] = -1;
  SP = [procTab + 13];
  [procTab + 9] = 0;
  [[PTBR + 2*(userSP-1)/512]*512 + (userSP-1)%512] = 0;
  ireturn;

endif;
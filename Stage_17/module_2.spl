breakpoint;
alias functionNum R1;

//GET FREE PAGE
if(functionNum == 1)then 
    //increment wait_mem_count
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;

    //while mem_free_count is 0
    while([SYSTEM_STATUS_TABLE + 2] == 0) do
        [PROCESS_TABLE + 16 * [SYSTEM_STATUS_TABLE + 1] + 4] = WAIT_MEM;
        multipush(R1);
        call MOD_5;
        multipop(R1);
    endwhile;

    alias memFreeIndex R2;
    //available pages for user processes are from 76 to 127
    memFreeIndex = 76;
    
    while(([MEMORY_FREE_LIST + memFreeIndex] > 0) && (memFreeIndex <= 127)) do
        memFreeIndex = memFreeIndex + 1;
    endwhile;

    [MEMORY_FREE_LIST + memFreeIndex] = 1;
    R0 = memFreeIndex;
    breakpoint;
    return ;

endif;

//release page num
if(functionNum ==2) then
    alias pageNum R2;
    //dec no of proc using this page 
    [MEMORY_FREE_LIST + pageNum] = [MEMORY_FREE_LIST + pageNum] -1; 
    if([MEMORY_FREE_LIST + pageNum] == 0) then
        //increment mem_free_count
        [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
    endif;

    alias i R3;
    i = 1;
    while(i < 16) do 
        if([PROCESS_TABLE + 16 * i + 4] == WAIT_MEM) then
            if(([PROCESS_TABLE + 16 * i + 1] > 0) && 
                ([PROCESS_TABLE + 16 * i + 1] < 16) 
                ) then
                    [PROCESS_TABLE + 16 * i + 4] = READY;
            endif;
        endif;
    i = i + 1;
    endwhile;
    breakpoint;
    return ;
endif;
